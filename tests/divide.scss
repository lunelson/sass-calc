@import 'deps';

//      _ _       _     _
//     | (_)     (_)   | |
//   __| |___   ___  __| | ___
//  / _` | \ \ / / |/ _` |/ _ \
// | (_| | |\ V /| | (_| |  __/
//  \__,_|_| \_/ |_|\__,_|\___|


$throw-catch: true !global;

.divide {
  /*
  non-number
  ////////////////////////
  content: "ERROR: divide($expr, $n): $n [false] is not a valid divisor";
  content: "ERROR: divide($expr, $n): $expr [false] is not a valid dividend";
  content: "ERROR: divide($expr, $n): $n [1.5em] is not a valid divisor";
  content: "ERROR: divide($expr, $n): $n [1em 3] is not a valid divisor";
  content: "ERROR: divide($expr, $n): $n [1.5em] is not a valid divisor";
  */
  content: inspect(divide(1.5em, false));
  content: inspect(divide(false, 1.5));
  content: inspect(divide(false, 1.5em));
  content: inspect(divide(1.5em, (1em 3)));
  content: inspect(divide((foo bar), 1.5em));
  /*
  string arguments
  ////////////////////////
  content: calc(1.5em / var(--foo));
  content: "ERROR: divide($expr, $n): $n [1.5em] is not a valid divisor";
  content: calc(var(--foo) / 2);
  content: calc(1.5em / calc(100% - 10px));
  content: "ERROR: divide($expr, $n): $n [0] is not a valid divisor";
  content: calc((100% - 10px) / 2);
  */
  content: inspect(divide(1.5em, var(--foo)));
  content: inspect(divide(var(--foo), 1.5em));
  content: inspect(divide(var(--foo), 2));
  content: inspect(divide(1.5em, calc(100% - 10px)));
  content: inspect(divide(calc(100% - 10px), 0));
  content: inspect(divide(calc(100% - 10px), 2));
  /*
  negative numbers
  ////////////////////////
  content: calc(var(--bar) / -2);
  content: -0.75em;
  content: -0.5em;
  content: calc(var(--bar) / 2);
  */
  content: inspect(divide(var(--bar), -2));
  content: inspect(divide(1.5em, -2));
  content: inspect(divide(-1em, 2));
  content: inspect(divide(var(--bar), 2));
  /*
  bad divisors
  ////////////////////////
  content: "ERROR: divide($expr, $n): $n [0] is not a valid divisor";
  content: "ERROR: divide($expr, $n): $n [a b] is not a valid divisor";
  content: "ERROR: divide($expr, $n): $n [null] is not a valid divisor";
  */
  content: inspect(divide(2, 0));
  content: inspect(divide(1.5em, (a b)));
  content: inspect(divide(-1, null));
  /*
  unit vs unitless zero
  ////////////////////////
  content: 0%;
  content: 0%;
  */
  content: inspect(divide(0px, 2));
  content: inspect(divide(0, 2));
}
