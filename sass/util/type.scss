// Type/value checks

// Check if all elements are numbers
// @author Lu Nelson
// @params {Any} $args... — the elements to evaluate
// @return {Boolean} — true if all the elements are numbers, else false
@function is-number($args...) {
  @each $arg in $args { @if type-of($arg) != 'number' { @return false; } }
  @return true;
}

// Check if all elements are values (see value/value.scss)
// @author Matthias Totschnig
// @params {Any} $args... — the elements to evaluate
// @return {Boolean} — true if all the elements are values, else false
@function is-value($args...) {
  @each $arg in $args { 
    @if type-of($arg) != list { @return false; }
    @if not is-number($arg...) { @return false; }
  }
  @return true;
}

// Check if all elements are strings
// @author Lu Nelson
// @params {Any} $args... — the elements to evaluate
// @return {Boolean} — true if all of the elements are strings, else false
@function is-string($args...) {
  @each $arg in $args { @if type-of($arg) != 'string' { @return false; } }
  @return true;
}

// Check if all elements are number with a value of 0 (units do not matter)
// @author Lu Nelson
// @params {Any} $args... — the elements to evaluate
// @return {Boolean} — true if all of the elements are 0, else false
@function is-zero($args...) {
  @if not is-number($args...) { @return false; }
  @each $arg in $args { @if strip-unit($arg) != 0 { @return false; } }
  @return true;
}
