// String utilities

// Formats a math expression or value (useful when operations are chained)
// @author Lu Nelson
// @param {String or Number} $value — The expression / value to format
// @return {String} — The formatted expression
@function __format($value){
  @if type-of($value) == 'number' {
    @return if(unitless($value), $value * 1%, $value);
  } @else if type-of($value) == 'string' {
    $is-calc: str-index($value, 'calc') == 1;
    $start: str-index($value, '(');
    $end: __str-last-index($value, ')');
    @if $is-calc and $start and $end {
      @return unquote(str-slice($value, $start, $end));
    } @else {
      @return unquote('(#{$value})');
    }
  } @else {
    @return error("invalid value for calc expression");
  }
}


// Find the index of the first character of the last occurence of a substring in a string
// @author Lu Nelson
// @param {String} $string — The string to search
// @param {String} $substring — The substring to search for
// @return {Number} — The index of the last occurence of $substring in $string
@function __str-last-index($string, $substring) {
  @if not is-string($string, $substring) { @return error("non-string argument(s) supplied"); }
  $length: str-length($string);
  @for $n from $length - str-length($substring) through 1 {
    $index: str-index(str-slice($string, $n + 1, $length), $substring);
    @if $index { @return $index + $n; }
  }
  @return null;
}
