@import 'true'; // true
@import '../index'; // sass-calc

@include test-module('checks') {

  @include test('num-check') {
    // true
    @include assert-true(num-check(1rem, 2em), 'true, if $a and $b are both numbers');
    @include assert-true(num-check(1, 2em), 'true, if $a and $b are both numbers');
    @include assert-true(num-check(1rem, 2), 'true, if $a and $b are both numbers');
    // false
    @include assert-false(num-check(1rem, 'str'), 'false, if either $a or $b is not a number');
    @include assert-false(num-check('str', 2), 'false, if either $a or $b is not a number');
    @include assert-false(num-check((1 2), 3em), 'false, if either $a or $b is not a number');
  }

  @include test('add-check') {
    // true
    @include assert-true(add-check(1, 2em), 'true, if $a or $b is unitless');
    @include assert-true(add-check(1em, 2), 'true, if $a or $b is unitless');
    @include assert-true(add-check(1em, 2em), 'true, if $a and $b units match');
    // false
    @include assert-false(add-check(1ex, 2em), 'false, if $a and $b units conflict');
  }

  @include test('mul-check') {
    // true
    @include assert-true(mul-check(1, 2em), 'true, if $a or $b is unitless');
    @include assert-true(mul-check(1em, 2), 'true, if $a or $b is unitless');
    @include assert-true(mul-check(1, 2), 'true, if $a and $b both unitless');
    // false
    @include assert-false(mul-check(1em, 2em), 'false, if $a and $b both have units');
  }

  @include test('div-check') {
    // true
    @include assert-true(div-check(1em, 2), 'true, if $b unitless, or both unitless ');
    @include assert-true(div-check(1, 2), 'true, if $b unitless, or both unitless ');
    // false
    @include assert-false(div-check(1, 2em), 'false, if $b not unitless');
  }

  @include test('unitless-number') {
    // true
    @include assert-true(unitless-number(1), 'true, if $n is number and unitless ');
    @include assert-true(unitless-number((1)), 'true, if $n is number and unitless ');
    // false
    @include assert-false(unitless-number(1em), 'false, if $n not a number or not unitless');
    @include assert-false(unitless-number(1vw), 'false, if $n not a number or not unitless');
    @include assert-false(unitless-number('hello'), 'false, if $n not a number or not unitless');
    @include assert-false(unitless-number((1 2)), 'false, if $n not a number or not unitless');
  }

}
