@import '../index';

.debug {
  is-number: __is-number(0px, 0rem, 0, (1 2));
  is-number: __is-number(0px, 0rem, 0, 'str');
  is-zero: __is-zero(0px, 0rem, 0, 0%);
  is-zero: __is-zero(0px, 0rem, 0, 1%);
  $zero: 0px;
  zero: $zero;
  zero: $zero * 0 + 1;
  zero: $zero / ($zero * 0 + 1);
  num: __is-number(1em, 'str');
  num: __is-number((1 2), 2);
  num: type-of((2 3));
  $test: 'hello / (world)';
  num: __str-last-index($test, 'rld');
  num: __str-last-index($test, 'o');
  num: __str-last-index($test, 'l');
  num: __str-last-index($test, 'rl');
  num: __str-last-index($test, ')') str-length($test);
  pre: __format(5);
  pre: __format(0);
  pre: __format(5em);
  pre: __format(null);
  pre: __format(calc(1em + 3%));
  pre: unquote('1em + 3%');
  pre: __format(unquote('1em + 3%'));
  pre: __format('string');
  pre: __format(string);
  pre: __format(add(1em, 1vw));
}

.hello-world {
  $expr: calc(100vw - 50%);

  test: subtract(1.5em, 1em);
  test: add(1.5em, 1rem);
  test: add(0em, 0rem);
  test: add(0em, 1rem);
  test: add(-1em, 0rem);
  test: add(-1em, -2rem);
  test: subtract(-1em, -2rem);
  test: add(multiply($expr, 2), 10px);
  test: divide(subtract(1.5em, 1em), 2);
  test: subtract(divide(subtract(1.5em, 1em), 2), add(1em, 1ex));
}
