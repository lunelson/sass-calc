//
// private
// --------------------------------------------------------------------------

@function --sc-is-number($args...) {
  @each $arg in $args { @if type-of($arg) != 'number' { @return false; } }
  @return true;
}

@function --sc-is-zero($args...) {
  @each $arg in $args {
    @if type-of($arg) != 'number' { @return false; }
    $arg: if(unitless($arg), $arg, $arg / (0 * $arg + 1));
    @if $arg != 0 { @return false; }
  }
  @return true;
}


@function --sc-bad-argument($arg) {
  @return type-of($arg) == 'bool' or type-of($arg) == 'list';
}

@function --sc-bad-factor($arg) {
  @return type-of($arg) == 'bool' or type-of($arg) == 'null' or type-of($arg) == 'list';
}

@function --sc-bad-divisor($n) {
  @return (not $n or (--sc-is-number($n) and (--sc-is-zero($n) or (not unitless($n)))));
}


@function --sc-can-sum($a, $b){
  @if --sc-is-number($a, $b) { @return comparable($a, $b); }
  @return false;
}

@function --sc-can-multiply($a, $b){
  @if --sc-is-number($a, $b) { @return unitless($a) or unitless($b); }
  @return false;
}

@function --sc-can-divide($a, $b){
  @if --sc-is-number($a, $b) { @return unitless($b); }
  @return false;
}

@function --sc-str-last-index($str, $substr) {
  @if not --sc-is-string($str, $substr) { @return throw-error("non-string argument(s) supplied"); }
  $length: str-length($str);
  @for $n from $length - str-length($substr) through 1 {
    $index: str-index(str-slice($str, $n + 1, $length), $substr);
    @if $index { @return $index + $n; }
  }
  @return null;
}
